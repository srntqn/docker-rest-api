swagger: "2.0"
info:
  description: Swagger file for Docker Rest API
  version: "1.0.0"
  title: Docker Rest API
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/api"

paths:
  /containers:
    get:
      operationId: "containers.listContainers"
      tags:
        - "containers"
      description: "Get all containers with parameters"
      responses: 
        200:
          description: "Successful get containers"
          schema:
            type: "array"

  /containers/{name}:
    get:
      operationId: "containers.getContainer"
      description: "Get specific container with parameters"
      tags:
        - "containers"
      parameters:
      - name: "name"
        in: path
        type: string
        required: true
      responses:
        200:
          description: "Successful get specific container"
          schema:
            type: "array"
    post:
      operationId: "containers.createContainer"
      description: "Create container"
      tags:
        - "containers"
      parameters:
      - name: "name"
        in: path
        type: string
        required: true
      responses:
        200:
          description: "Successful create container"
          schema:
            type: "string"
    put:
      operationId: "containers.changeContainerStatus"
      description: "Change container status, 'running' or 'exited' allowed"
      tags:
        - "containers"
      parameters:
      - name: "name"
        in: path
        type: string
        required: true
      - name: "status"
        in: query
        type: string
        required: true
      responses:
        200:
          description: "Successful change container status"
          schema:
            type: "string"
    delete:
      operationId: "containers.removeContainer"
      description: "Delete container"
      tags:
        - "containers"
      parameters:
      - name: "name"
        in: path
        type: string
        required: true
      responses:
        200:
          description: "Successful delete container"
          schema:
            type: "string"

  /containers/logs/{name}:
    get:
      operationId: "containers.getContainerLogs"
      description: "Get logs of specific container"
      tags:
        - "containers"
      parameters:
      - name: "name"
        in: path
        type: string
        required: true
      - name: "tail"
        in: query
        type: integer
        required: false
        description: "Number of lines at the end of logs"
      responses:
        200:
          description: "Successful get container logs"
          schema:
            type: "string"
